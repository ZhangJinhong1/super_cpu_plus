module memory(clk,WE,WE3,WD,A,RD,A1,A2,A3,RD1,RD2,WD3);
input clk;
input WE;
input WE3;
input [31:0]WD;
input [31:0]WD3;
input [31:0]A;
input [4:0]A1;
input [4:0]A2;
input [4:0]A3;
output [31:0]RD;
output [31:0]RD1;
output [31:0]RD2;
reg [31:	0]mem[15:0];
reg [31:	0]mem2[15:0];

always@(posedge clk)
begin
  if (WE)
      mem[A] <= WD;
		
end

always@(posedge clk)
begin
  if (WE3)
      mem2[A3] <= WD3;
end

assign RD = mem[A];
assign RD1 = mem2[A1];
assign RD2 = mem2[A2];
endmodule
